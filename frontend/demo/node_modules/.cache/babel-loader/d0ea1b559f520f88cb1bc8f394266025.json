{"ast":null,"code":"import { useContext, useLayoutEffect, useState, useRef, useMemo } from 'react';\nimport CookiesContext from './CookiesContext';\nimport { isInBrowser } from './utils';\nexport default function useCookies(dependencies) {\n  var cookies = useContext(CookiesContext);\n\n  if (!cookies) {\n    throw new Error('Missing <CookiesProvider>');\n  }\n\n  var initialCookies = cookies.getAll();\n\n  var _a = useState(initialCookies),\n      allCookies = _a[0],\n      setCookies = _a[1];\n\n  var previousCookiesRef = useRef(allCookies);\n\n  if (isInBrowser()) {\n    useLayoutEffect(function () {\n      function onChange() {\n        var newCookies = cookies.getAll();\n\n        if (shouldUpdate(dependencies || null, newCookies, previousCookiesRef.current)) {\n          setCookies(newCookies);\n        }\n\n        previousCookiesRef.current = newCookies;\n      }\n\n      cookies.addChangeListener(onChange);\n      return function () {\n        cookies.removeChangeListener(onChange);\n      };\n    }, [cookies]);\n  }\n\n  var setCookie = useMemo(function () {\n    return cookies.set.bind(cookies);\n  }, [cookies]);\n  var removeCookie = useMemo(function () {\n    return cookies.remove.bind(cookies);\n  }, [cookies]);\n  return [allCookies, setCookie, removeCookie];\n}\n\nfunction shouldUpdate(dependencies, newCookies, oldCookies) {\n  if (!dependencies) {\n    return true;\n  }\n\n  for (var _i = 0, dependencies_1 = dependencies; _i < dependencies_1.length; _i++) {\n    var dependency = dependencies_1[_i];\n\n    if (newCookies[dependency] !== oldCookies[dependency]) {\n      return true;\n    }\n  }\n\n  return false;\n}","map":{"version":3,"sources":["/Users/jaydenfont/Desktop/Code/School/cs411-project/frontend/demo/node_modules/react-cookie/es6/useCookies.js"],"names":["useContext","useLayoutEffect","useState","useRef","useMemo","CookiesContext","isInBrowser","useCookies","dependencies","cookies","Error","initialCookies","getAll","_a","allCookies","setCookies","previousCookiesRef","onChange","newCookies","shouldUpdate","current","addChangeListener","removeChangeListener","setCookie","set","bind","removeCookie","remove","oldCookies","_i","dependencies_1","length","dependency"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,eAArB,EAAsCC,QAAtC,EAAgDC,MAAhD,EAAwDC,OAAxD,QAAuE,OAAvE;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,WAAT,QAA4B,SAA5B;AACA,eAAe,SAASC,UAAT,CAAoBC,YAApB,EAAkC;AAC7C,MAAIC,OAAO,GAAGT,UAAU,CAACK,cAAD,CAAxB;;AACA,MAAI,CAACI,OAAL,EAAc;AACV,UAAM,IAAIC,KAAJ,CAAU,2BAAV,CAAN;AACH;;AACD,MAAIC,cAAc,GAAGF,OAAO,CAACG,MAAR,EAArB;;AACA,MAAIC,EAAE,GAAGX,QAAQ,CAACS,cAAD,CAAjB;AAAA,MAAmCG,UAAU,GAAGD,EAAE,CAAC,CAAD,CAAlD;AAAA,MAAuDE,UAAU,GAAGF,EAAE,CAAC,CAAD,CAAtE;;AACA,MAAIG,kBAAkB,GAAGb,MAAM,CAACW,UAAD,CAA/B;;AACA,MAAIR,WAAW,EAAf,EAAmB;AACfL,IAAAA,eAAe,CAAC,YAAY;AACxB,eAASgB,QAAT,GAAoB;AAChB,YAAIC,UAAU,GAAGT,OAAO,CAACG,MAAR,EAAjB;;AACA,YAAIO,YAAY,CAACX,YAAY,IAAI,IAAjB,EAAuBU,UAAvB,EAAmCF,kBAAkB,CAACI,OAAtD,CAAhB,EAAgF;AAC5EL,UAAAA,UAAU,CAACG,UAAD,CAAV;AACH;;AACDF,QAAAA,kBAAkB,CAACI,OAAnB,GAA6BF,UAA7B;AACH;;AACDT,MAAAA,OAAO,CAACY,iBAAR,CAA0BJ,QAA1B;AACA,aAAO,YAAY;AACfR,QAAAA,OAAO,CAACa,oBAAR,CAA6BL,QAA7B;AACH,OAFD;AAGH,KAZc,EAYZ,CAACR,OAAD,CAZY,CAAf;AAaH;;AACD,MAAIc,SAAS,GAAGnB,OAAO,CAAC,YAAY;AAAE,WAAOK,OAAO,CAACe,GAAR,CAAYC,IAAZ,CAAiBhB,OAAjB,CAAP;AAAmC,GAAlD,EAAoD,CAACA,OAAD,CAApD,CAAvB;AACA,MAAIiB,YAAY,GAAGtB,OAAO,CAAC,YAAY;AAAE,WAAOK,OAAO,CAACkB,MAAR,CAAeF,IAAf,CAAoBhB,OAApB,CAAP;AAAsC,GAArD,EAAuD,CAACA,OAAD,CAAvD,CAA1B;AACA,SAAO,CAACK,UAAD,EAAaS,SAAb,EAAwBG,YAAxB,CAAP;AACH;;AACD,SAASP,YAAT,CAAsBX,YAAtB,EAAoCU,UAApC,EAAgDU,UAAhD,EAA4D;AACxD,MAAI,CAACpB,YAAL,EAAmB;AACf,WAAO,IAAP;AACH;;AACD,OAAK,IAAIqB,EAAE,GAAG,CAAT,EAAYC,cAAc,GAAGtB,YAAlC,EAAgDqB,EAAE,GAAGC,cAAc,CAACC,MAApE,EAA4EF,EAAE,EAA9E,EAAkF;AAC9E,QAAIG,UAAU,GAAGF,cAAc,CAACD,EAAD,CAA/B;;AACA,QAAIX,UAAU,CAACc,UAAD,CAAV,KAA2BJ,UAAU,CAACI,UAAD,CAAzC,EAAuD;AACnD,aAAO,IAAP;AACH;AACJ;;AACD,SAAO,KAAP;AACH","sourcesContent":["import { useContext, useLayoutEffect, useState, useRef, useMemo } from 'react';\r\nimport CookiesContext from './CookiesContext';\r\nimport { isInBrowser } from './utils';\r\nexport default function useCookies(dependencies) {\r\n    var cookies = useContext(CookiesContext);\r\n    if (!cookies) {\r\n        throw new Error('Missing <CookiesProvider>');\r\n    }\r\n    var initialCookies = cookies.getAll();\r\n    var _a = useState(initialCookies), allCookies = _a[0], setCookies = _a[1];\r\n    var previousCookiesRef = useRef(allCookies);\r\n    if (isInBrowser()) {\r\n        useLayoutEffect(function () {\r\n            function onChange() {\r\n                var newCookies = cookies.getAll();\r\n                if (shouldUpdate(dependencies || null, newCookies, previousCookiesRef.current)) {\r\n                    setCookies(newCookies);\r\n                }\r\n                previousCookiesRef.current = newCookies;\r\n            }\r\n            cookies.addChangeListener(onChange);\r\n            return function () {\r\n                cookies.removeChangeListener(onChange);\r\n            };\r\n        }, [cookies]);\r\n    }\r\n    var setCookie = useMemo(function () { return cookies.set.bind(cookies); }, [cookies]);\r\n    var removeCookie = useMemo(function () { return cookies.remove.bind(cookies); }, [cookies]);\r\n    return [allCookies, setCookie, removeCookie];\r\n}\r\nfunction shouldUpdate(dependencies, newCookies, oldCookies) {\r\n    if (!dependencies) {\r\n        return true;\r\n    }\r\n    for (var _i = 0, dependencies_1 = dependencies; _i < dependencies_1.length; _i++) {\r\n        var dependency = dependencies_1[_i];\r\n        if (newCookies[dependency] !== oldCookies[dependency]) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}