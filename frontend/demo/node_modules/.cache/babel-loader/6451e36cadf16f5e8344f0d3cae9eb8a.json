{"ast":null,"code":"var _jsxFileName = \"/Users/jaydenfont/Desktop/Code/School/cs411-project/frontend/demo/src/components/Login.js\";\nimport { GoogleLogin } from 'react-google-login';\nimport { resolvePath } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Login() {\n  const responseGoogle = response => {\n    console.log(response);\n\n    if (\"accessToken\" in response) {\n      localStorage.setItem(\"accessToken\", response['accessToken']); // store in local storage, not ideal\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(GoogleLogin, {\n      clientId: process.env.GOOGLECLIENTID,\n      buttonText: \"Login\",\n      onSuccess: responseGoogle,\n      onFailure: responseGoogle,\n      cookiePolicy: 'single_host_origin'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/jaydenfont/Desktop/Code/School/cs411-project/frontend/demo/src/components/Login.js"],"names":["GoogleLogin","resolvePath","Login","responseGoogle","response","console","log","localStorage","setItem","process","env","GOOGLECLIENTID"],"mappings":";AAAA,SAAQA,WAAR,QAA0B,oBAA1B;AACA,SAASC,WAAT,QAA4B,kBAA5B;;;AAEA,SAASC,KAAT,GAAiB;AACb,QAAMC,cAAc,GAAIC,QAAD,IAAc;AACjCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;;AACA,QAAI,iBAAiBA,QAArB,EAA+B;AAC3BG,MAAAA,YAAY,CAACC,OAAb,CAAqB,aAArB,EAAoCJ,QAAQ,CAAC,aAAD,CAA5C,EAD2B,CACmC;AACjE;AACJ,GALD;;AAMA,sBACA;AAAA,2BACA,QAAC,WAAD;AACI,MAAA,QAAQ,EAAEK,OAAO,CAACC,GAAR,CAAYC,cAD1B;AAEI,MAAA,UAAU,EAAC,OAFf;AAGI,MAAA,SAAS,EAAER,cAHf;AAII,MAAA,SAAS,EAAEA,cAJf;AAKI,MAAA,YAAY,EAAE;AALlB;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADA;AAWH;;KAlBQD,K;AAoBT,eAAeA,KAAf","sourcesContent":["import {GoogleLogin} from 'react-google-login'\nimport { resolvePath } from 'react-router-dom'\n\nfunction Login() {\n    const responseGoogle = (response) => {\n        console.log(response);\n        if (\"accessToken\" in response) {\n            localStorage.setItem(\"accessToken\", response['accessToken'])  // store in local storage, not ideal\n        }\n    }\n    return (\n    <div>\n    <GoogleLogin\n        clientId={process.env.GOOGLECLIENTID}\n        buttonText=\"Login\"\n        onSuccess={responseGoogle}\n        onFailure={responseGoogle}\n        cookiePolicy={'single_host_origin'}\n    />\n  </div>\n    )\n}\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}