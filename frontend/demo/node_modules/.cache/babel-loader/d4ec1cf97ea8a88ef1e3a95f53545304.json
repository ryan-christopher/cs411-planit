{"ast":null,"code":"var _jsxFileName = \"/Users/jaydenfont/Desktop/Code/School/cs411-project/frontend/demo/src/pages/app.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { CgArrowLongDownR } from 'react-icons/cg';\nimport '../style/App.css';\nimport Navbar from '../components/Navbar';\nimport Footer from '../components/Footer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar axios = require(\"axios\");\n\nconst AppPage = () => {\n  _s();\n\n  const [lat, setLat] = useState(null);\n  const [lng, setLng] = useState(null);\n  const [status, setStatus] = useState(null);\n  const [MBTAInput, setMBTAInput] = useState(\"\");\n  const [MBTALine, setMBTALine] = useState(null);\n  const [invalidLine, setInvalidLine] = useState(null);\n\n  const checkAuth = () => {\n    axios({\n      method: \"GET\",\n      url: \"https://www.googleapis.com/oauth2/v3/tokeninfo?access_token=\" + localStorage.getItem(\"accessToken\")\n    }).catch(error => {\n      window.alert(\"Please Sign into Google Below!\");\n      return false;\n    });\n    return true;\n  };\n\n  const getLocation = () => {\n    if (checkAuth()) {\n      if (!navigator.geolocation) {\n        setStatus('Geolocation is not supported by your browser');\n      } else {\n        navigator.geolocation.getCurrentPosition(position => {\n          setStatus(null);\n          setLat(position.coords.latitude);\n          setLng(position.coords.longitude);\n        }, () => {\n          setStatus('Unable to retrieve your location');\n          var pic = document.getElementById(\"response\");\n          pic.innerHTML = '<img class=\"sad-response\" src=\"pictures/sad-face.png\"/>';\n        });\n      }\n    }\n  }; // Takes in MBTAInput from state and POSTs to flask backend\n\n\n  const getLineData = () => {\n    if (checkAuth()) {\n      var data = JSON.stringify({\n        \"line\": MBTAInput\n      });\n      axios({\n        method: \"post\",\n        url: \"http://127.0.0.1:5000/get_trains_by_line\",\n        data: data,\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(function (response) {\n        if (!('errors' in response.data['response'])) {\n          setMBTALine(response.data['response']);\n          setInvalidLine(null);\n          console.log(MBTALine);\n        } else {\n          console.log(response.data);\n          console.log('No input given');\n        }\n      }).then(console.log(\"Success\")).catch(function (error) {\n        setInvalidLine(error);\n      });\n    }\n  };\n\n  const testGH = () => {\n    if (checkAuth()) {\n      axios({\n        method: \"post\",\n        url: \"http://127.0.0.1:5000/get_directions_between_coords\",\n        data: {\n          \"depart_lat\": 42.35079819407158,\n          \"depart_lon\": -71.10901412751858,\n          \"dest_lat\": 42.36017428184034,\n          \"dest_lon\": -71.05590316768416\n        },\n        headers: {\n          'Content-Type': \"application/json\"\n        }\n      }).then(function (response) {\n        console.log(response.data);\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"background\",\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App-header\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"App\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"response\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(CgArrowLongDownR, {\n              className: \"arrowDown\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 45\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: getLocation,\n            children: \"get location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this), lat && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Latitude: \", lat]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 33\n          }, this), lng && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Longitude: \", lng]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 33\n          }, this), MBTALine && !invalidLine && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [MBTALine['data']['attributes']['direction_destinations'][0], \" - \", MBTALine['data']['attributes']['direction_destinations'][1]]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 54\n          }, this), invalidLine && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Error 404: Line named \\\"\", MBTAInput, \"\\\" not found\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: testGH,\n            children: \"Test GH\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AppPage, \"xxIXj2A3jog2PRk1fMb0eYbpQCw=\");\n\n_c = AppPage;\nexport default AppPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppPage\");","map":{"version":3,"sources":["/Users/jaydenfont/Desktop/Code/School/cs411-project/frontend/demo/src/pages/app.jsx"],"names":["React","useState","useEffect","CgArrowLongDownR","Navbar","Footer","axios","require","AppPage","lat","setLat","lng","setLng","status","setStatus","MBTAInput","setMBTAInput","MBTALine","setMBTALine","invalidLine","setInvalidLine","checkAuth","method","url","localStorage","getItem","catch","error","window","alert","getLocation","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","pic","document","getElementById","innerHTML","getLineData","data","JSON","stringify","headers","then","response","console","log","testGH"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { CgArrowLongDownR } from 'react-icons/cg';\nimport '../style/App.css';\nimport Navbar from '../components/Navbar'\nimport Footer from '../components/Footer'\nvar axios = require(\"axios\");\n\nconst AppPage = () => {\n    const [lat, setLat] = useState(null);\n    const [lng, setLng] = useState(null);\n    const [status, setStatus] = useState(null);\n    const [MBTAInput, setMBTAInput] = useState(\"\");\n    const [MBTALine, setMBTALine] = useState(null);\n    const [invalidLine, setInvalidLine] = useState(null);\n\n    const checkAuth = () => {\n        axios({\n            method: \"GET\",\n            url: \"https://www.googleapis.com/oauth2/v3/tokeninfo?access_token=\" + localStorage.getItem(\"accessToken\")\n        })\n        .catch(error => {\n            window.alert(\"Please Sign into Google Below!\")\n            return false\n        })\n        return true;\n    }\n\n    const getLocation = () => {\n        if (checkAuth()) {\n            if (!navigator.geolocation) {\n                setStatus('Geolocation is not supported by your browser');\n            } else {\n                navigator.geolocation.getCurrentPosition((position) => {\n                    setStatus(null);\n                    setLat(position.coords.latitude);\n                    setLng(position.coords.longitude);\n                }, () => {\n                    setStatus('Unable to retrieve your location');\n                    var pic = document.getElementById(\"response\")\n                    pic.innerHTML = '<img class=\"sad-response\" src=\"pictures/sad-face.png\"/>'\n                });\n            }\n        }\n        \n    }\n\n    // Takes in MBTAInput from state and POSTs to flask backend\n    const getLineData = () => {\n        if (checkAuth()) {\n            var data = JSON.stringify({\n                \"line\": MBTAInput\n            });\n            axios({\n                method: \"post\",\n                url: \"http://127.0.0.1:5000/get_trains_by_line\",\n                data: data,\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            })\n                .then(function (response) {\n                    if (!('errors' in response.data['response'])) {\n                        setMBTALine(response.data['response'])\n                        setInvalidLine(null)\n                        console.log(MBTALine)\n                    }\n                    else {\n                        console.log(response.data)\n                        console.log('No input given')\n                    }\n                })\n                .then(console.log(\"Success\"))\n                .catch(function (error) {\n                    setInvalidLine(error)\n                })\n        }\n    }\n\n    const testGH = () => {\n        if (checkAuth()) {\n            axios({\n                method: \"post\",\n                url: \"http://127.0.0.1:5000/get_directions_between_coords\",\n                data: {\n                    \"depart_lat\": 42.35079819407158,\n                    \"depart_lon\": -71.10901412751858,\n                    \"dest_lat\": 42.36017428184034,\n                    \"dest_lon\": -71.05590316768416\n                },\n                headers: {\n                    'Content-Type': \"application/json\"\n                }\n            })\n                .then(function (response) {\n                    console.log(response.data)\n                })\n        }\n    }\n\n    return (\n        <div>\n\n            <div className=\"background\">\n                <Navbar />\n                <div className=\"App-header\">\n                    <div className=\"App\">\n                        <div id=\"response\"> <CgArrowLongDownR className=\"arrowDown\" /> </div>\n                        <button onClick={getLocation}>get location</button>\n                        <p>{status}</p>\n                        {lat && <p>Latitude: {lat}</p>}\n                        {lng && <p>Longitude: {lng}</p>}\n                        {/* <p>Enter an MBTA Bus or Train Line:</p>\n                        <input type=\"text\" onChange={(e) => setMBTAInput(e.target.value)} value={MBTAInput}></input>\n                        <p />\n                        <button onClick={getLineData}>get MBTA line endpoints</button> */}\n                        {MBTALine && !invalidLine && <p>{MBTALine['data']['attributes']['direction_destinations'][0]} - {MBTALine['data']['attributes']['direction_destinations'][1]}</p>}\n                        {invalidLine && <p>Error 404: Line named \"{MBTAInput}\" not found</p>}\n                        {/* Tests getting route from coordinates, delete later */}\n                        <button onClick={testGH}>Test GH</button>\n                    </div>\n                </div>\n            </div>\n            <Footer />\n        </div>\n    );\n}\n\nexport default AppPage;"]},"metadata":{},"sourceType":"module"}